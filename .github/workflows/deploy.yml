name: Deploy to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
        NEXT_PUBLIC_EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
        NEXT_PUBLIC_EMAILJS_PUBLIC_KEY: ${{ secrets.EMAILJS_PUBLIC_KEY }}
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Arr√™ter le conteneur existant
          cd /opt/portfolio-app
          docker-compose down || true
          
          # Sauvegarder l'ancienne version
          if [ -d "backup" ]; then
            rm -rf backup
          fi
          mkdir -p backup
          cp -r . backup/$(date +%Y%m%d_%H%M%S) || true
          
          # Nettoyer les anciens builds
          docker system prune -f
          
    - name: Copy files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT }}
        source: "."
        target: "/opt/portfolio-app"
        strip_components: 0
        
    - name: Start application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /opt/portfolio-app
          
          # Donner les permissions au user deploy
          sudo chown -R deploy:deploy /opt/portfolio-app
          
          # Build et d√©marrer les conteneurs
          docker-compose up -d --build
          
          # V√©rifier que l'application d√©marre
          sleep 10
          curl -f http://localhost:3002/api/health || exit 1
          
          # Nettoyer les anciens builds
          docker system prune -f
          
    - name: Notify deployment success
      if: success()
      run: |
        echo "‚úÖ D√©ploiement r√©ussi sur ${{ secrets.VPS_HOST }}"
        echo "üåê Application accessible sur le port 3002"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå √âchec du d√©ploiement sur ${{ secrets.VPS_HOST }}"
        echo "üîç V√©rifiez les logs sur le serveur" 